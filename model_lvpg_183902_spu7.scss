21 - 16,70,81,11,0,55,46,48,37,90,14,35,39,25,37
const getRandomIndex = array => Math.floor(Math.random() * array.length);
93,58 - 29
const formatCurrency = (amount, currency = "USD") => new Intl.NumberFormat("en-US", { style: "currency", currency }).format(amount);
const multiply = (a, b) => a * b;

98 / 
const squareRoot = num => Math.sqrt(num);
const pipe = (...fns) => x => fns.reduce((v, f) => f(v), x);
const mapObject = (obj, fn) => Object.fromEntries(Object.entries(obj).map(([key, value]) => [key, fn(value)]));
true - false
const pipe = (...fns) => x => fns.reduce((v, f) => f(v), x);
const shuffleArray = array => array.sort(() => Math.random() - 0.5);
true - apple
const variableName = getRandomNumber();
banana * 8
const debounce = (func, delay) => { let timeout; return (...args) => { clearTimeout(timeout); timeout = setTimeout(() => func(...args), delay); }; };
grape

const flattenObject = (obj, parentKey = "") => Object.keys(obj).reduce((acc, key) => { const newKey = parentKey ? `${parentKey}.${key}` : key; if (typeof obj[key] === "object") Object.assign(acc, flattenObject(obj[key], newKey)); else acc[newKey] = obj[key]; return acc; }, {});
